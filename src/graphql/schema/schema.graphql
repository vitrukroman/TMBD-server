type Query {
    movie (id: Int!, language: Language!) : Movie!
    movies: [Movie!]!
    configuration: Configuration!
    languages: [Language!]!
}

type Configuration {
    images: ImageConfiguration!
}

type ImageConfiguration {
    base_url: String!
    secure_base_url: String!
    backdrop_sizes: [String!]!
    logo_sizes: [String!]!
    poster_sizes: [String!]!
    profile_sizes: [String!]!
    still_sizes: [String!]!
}

type Movie {
    adult: Boolean
    budget: Int!
    genres: [Genre!]!
    homepage: String
    id: Int!
    imdb_id: String
    language: Language!
    original_language: String!
    original_title: String!
    overview: String
    popularity: Float!
    poster_path: String
    production_companies: [ProductionCompany!]!
    production_countries: [ProductionCountry!]!
    release_date: String!
    revenue: Int!
    runtime: Int
    spoken_languages: [SpokenLanguage!]!
    status: Status!
    tagline: String
    title: String!
    video: Boolean!
    vote_average: Float!
    vote_count: Int!
    keywords: [Keyword!]
    similarMovies: [Movie!]!
    cast: [Cast!]!
    crew: [Crew!]!
}


type Genre {
    id: String!
    name: String!
}

type ProductionCompany {
    name: String!
    id: Int!
    logo_path: String
    origin_country: String!
}

type ProductionCountry {
    iso_3166_1: String!
    name: String!
}

type SpokenLanguage {
    iso_639_1: String!
    name: String!
}

enum Status {
    Rumored
    Planned
    In_Production
    Post_Production
    Released
    Canceled
}

type Keyword {
    id: Int!
    name: String!
}

type Cast {
    cast_id: Int!
    character: String!
    credit_id: String!
    gender: Int
    id: Int!
    name: String!
    order: Int!
    profile_path: String
}


type Crew {
    credit_id: Int!
    department: String!
    gender: Int
    id: Int!
    job: String!
    name: String!
    profile_path: String
}


type Mutation {
    _: Boolean
}

enum Language {
    "English"
    en
    "Ukrainian"
    uk
}

schema {
    query: Query,
    mutation: Mutation
}